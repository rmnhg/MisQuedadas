<head>
  <title>Mis quedadas - RHG | Nuevo sitio</title>
  <% include head %>
</head>

<% include navbar %>

<div class="page-header header-filter" data-parallax="true" style="background-image: url('/img/city-profile.jpg')">
  <div class="container">
    <div class="row">
      <div class="col-md-8 ml-auto mr-auto">
        <div class="brand text-center">
          <h1>Quedadas</h1>
          <h3 class="title text-center">Nuevo sitio</h3>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="main main-raised">
  <div class="container">
    <div class="section">
      <form name="nuevoSitioForm" method="post" onSubmit="return validar();" action="/sitio/">
        <div id="bloque" class="form-group label-floating has-danger">
          <label class="control-label">Nombre del sitio:</label>
          <input type="text" name ="direccion" id="direccion" placeholder="Introduce el nombre del nuevo sitio..." onkeyup="validar();" class="form-control" />
          <span id="icono"><span class="material-icons form-control-feedback">clear</span></span>
        </div>
        <div id="map"></div>
        <br>
        <i class="fas fa-map-marker-alt text-danger"></i> <strong>Latitud:</strong>
        <input type="text" name="lat" id="lat" value="40.452658" class="form-control"><br>
        <i class="fas fa-globe text-info"></i> <strong>Longitud:</strong>
        <input type="text" name="lng" id="lng" value="-3.726201" class="form-control"><br>
        <div class="d-flex justify-content-center">
          <!-- Button trigger modal -->
          <button type="button" id="botonEnviar" class="btn btn-danger btn-lg" data-toggle="modal" data-target="#ConfirmarSitio" onClick="nombreSitio();" disabled>Crear sitio</button>
        </div>
        <br>
        <br>
        <div>
          <button type="button" class="btn btn-light" data-toggle="collapse" data-target="#instrucciones">Pulsa para obtener instrucciones.</button>
          <div id="instrucciones" class="collapse in">
            <ul class="list-unstyled">
              <li>Pon nombre al sitio.</li>
                <ul>
                  <li>No podrás ponerle el nombre de un sitio existente, ni llamarlo "nuevo".</li>
                </ul>
              <li>Busca en el mapa la localización del sitio.</li>
                <ul>
                  <li>Usa el cuadro azul para buscar en el mapa.</li>
                  <li>También puedes desplazar el icono <i class="fas fa-map-marker-alt text-danger"></i> donde quieras establecer tu sitio.</li>
                </ul>
              <li>Para finalizar debes pulsar el botón de <i>Crear sitio</i>.</li>
            </ul>
          </div>
        </div>
        <!-- Busqueda de direcciones en el mapa -->
        <div class="pac-card" id="pac-card">
            <div id="title">
              Búsqueda
            </div>
            <div id="pac-container">
              <input id="pac-input" type="text" placeholder="Búscar por localización">
            </div>
        </div>
        <div id="infowindow-content">
          <img src="" width="16" height="16" id="place-icon">
          <span id="place-name"  class="title"></span><br>
          <span id="place-address"></span>
        </div>
        <!-- Modal - Cartel de confirmación de crear sitio -->
        <div class="modal" id="ConfirmarSitio" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" data-backdrop="false" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirmación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                ¿Quieres crear el sitio <span id="SitioElegido"></span>?
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-primary" onClick="return true;">Aceptar</button>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<% include footer %>

<!-- Scripts -->
<% include scripts %>

<!-- Para validar el nombre del nuevo sitio -->
<script>
  var sitios = <%- JSON.stringify(sitios) %>;
  var texto = document.getElementById('direccion');

  function validar() {
    var x = document.forms["nuevoSitioForm"]["direccion"].value;
    if (sitios.includes(x) || x == "" || x.toLowerCase() == "nuevo" ) {
    document.getElementById("icono").innerHTML='<span class="material-icons form-control-feedback">clear</span>';
    document.getElementById("bloque").classList.remove('has-success');
    document.getElementById('botonEnviar').classList.remove('btn-success');

    document.getElementById("bloque").classList.add('has-danger');
    document.getElementById('botonEnviar').classList.add('btn-danger');

    document.getElementById('botonEnviar').disabled = true;
    return false;
  } else {
    document.getElementById("icono").innerHTML='<span class="form-control-feedback"><i class="material-icons">done</i></span>';
    document.getElementById("bloque").classList.remove('has-danger');
    document.getElementById('botonEnviar').classList.remove('btn-danger');

    document.getElementById("bloque").classList.add('has-success');
    document.getElementById('botonEnviar').classList.add('btn-success');

    document.getElementById('botonEnviar').disabled = false;
    return true;
  }
  return false;
}
</script>

<!-- Para obtener el nombre del sitio que se va a crear en la confirmación. -->
<script>
  function nombreSitio(){
    var s = document.forms["nuevoSitioForm"]["direccion"].value;
    document.getElementById("SitioElegido").innerHTML = s;
  }
</script>

<script>
function initMap() {
  var location = {lat: 40.452658, lng: -3.726201};
  var map = new google.maps.Map(document.getElementById('map'), {
    center: location,    streetViewControl: false,
    zoom: 17
  });
  var card = document.getElementById('pac-card');
  var input = document.getElementById('pac-input');
  var types = document.getElementById('type-selector');
  var strictBounds = document.getElementById('strict-bounds-selector');

  map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

  var autocomplete = new google.maps.places.Autocomplete(input);

  // Bind the map's bounds (viewport) property to the autocomplete object,
  // so that the autocomplete requests use the current map bounds for the
  // bounds option in the request.
  autocomplete.bindTo('bounds', map);

  // Set the data fields to return when the user selects a place.
  autocomplete.setFields(
    ['address_components', 'geometry', 'icon', 'name']);

    var infowindow = new google.maps.InfoWindow();
    var infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      position: location,
      map: map,
      draggable: true,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

      infowindowContent.children['place-icon'].src = place.icon;
      infowindowContent.children['place-name'].textContent = place.name;
      infowindowContent.children['place-address'].textContent = address;
      infowindow.open(map, marker);
      var lat = marker.getPosition().lat();
      var lng = marker.getPosition().lng();
      document.getElementById("lat").value = lat;
      document.getElementById("lng").value = lng;
    });

    google.maps.event.addListener(marker, 'dragend', function(){
      var lat = marker.getPosition().lat();
      var lng = marker.getPosition().lng();
      document.getElementById("lat").value = lat;
      document.getElementById("lng").value = lng;
    });
    google.maps.event.addListener(marker, 'dragstart', function(){
      infowindow.close();
    });
  }
</script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%- GoogleMapsAPIkey %>&libraries=places&callback=initMap">
</script>
